@import url('https://fonts.googleapis.com/css2?family=Inter:wght@200;400;600&display=swap');

body {
  background-color: #e7e7e7;
  font-family: sans-serif;
  font-family: 'Inter', sans-serif;
  font-weight: 400;
  user-select: none;
}
#wrapper {
  position: absolute;
  display: grid;
  place-items: center;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  overflow: hidden;
}
.innerWrapper {
  --linkColor: dodgerblue;
  --bgColor: #ffffff;
  --txtColor: #333333;
  --lightColor: lightgray;
  --dullColor: gray;
  --missedColor: #dddddd;
  --indiColor: #ffffff;
  --footerIcon: #efefef;
  position: relative;
  border: 2vmin solid #222222;
  box-shadow: 0 0 0 0.4vmin #eeeeee, 0 0.6vmin 2vmin rgba(0, 0, 0, 0.4);
  border-radius: 7vmin;
  width: 45vmin;
  height: 90vmin;
  overflow: hidden;
  background-color: var(--bgColor);
  color: var(--txtColor);
}
#darkMode {
  display: none;
}
#darkMode + label {
  position: absolute;
  top: 4vmin;
  right: 4vmin;
  background-color: #ffffff;
  color: #333333;
  border-radius: 50%;
  height: 6vmin;
  width: 6vmin;
  text-align: center;
  transition: all 300ms ease-in-out 0s;
}
#darkMode + label span {
  font-size: 2vmin;
  line-height: 4vmin;
}
#darkMode:checked + label {
  background-color: #333333;
  color: #ffffff;
  transform: rotate(180deg);
}
#darkMode:checked ~ .innerWrapper {
  --bgColor: #000000;
  --txtColor: #ffffff;
  --lightColor: #333333;
  --dullColor: #666666;
  --missedColor: #222222;
  --indiColor: #666666;
  --footerIcon: #141414;
}
#darkMode:checked ~ .innerWrapper label:hover {
  filter: brightness(80%);
}
#screenWrapper {
  position: absolute;
  display: flex;
  width: 400%;
  height: 100%;
  border-radius: 7vmin;
  overflow: hidden;
  top: 0;
  left: 0;
  transition: transform 200ms ease-in-out;
}
.screen {
  position: relative;
  width: calc(100% - 6vmin);
  height: calc(100% - 6vmin);
  background-color: plum;
  background-color: var(--bgColor);
  border-radius: 7vmin;
  overflow: hidden;
  overflow-y: auto;
}
.screen > div {
  border-radius: 7vmin;
}
.roundMe {
  border-radius: 7vmin 7vmin 0 0;
  width: calc(100% + 6vmin);
  transform: translateX(-3vmin);
}
.roundLess {
  border-radius: 7vmin 7vmin 0 0;
}
.screen::-webkit-scrollbar {
  display: none;
}
input + label {
  cursor: pointer;
}
input[type='radio'] {
  display: none;
}
input[type='radio'] + label {
  position: absolute;
  z-index: 9;
  left: 0;
  bottom: 0;
  width: 25%;
  height: 9vmin;
  background-color: var(--footerIcon);
  color: #aaaaaa;
  border-top: 1px solid var(--lightColor);
  font-size: 1.5vmin;
  text-align: center;
}
label span {
  margin-top: 1vmin;
  font-size: 3.5vmin !important;
}
label:hover {
  filter: brightness(105%);
}
input[type='radio'] + label:nth-of-type(1) {
  border-radius: 0 0 0 5.5vmin;
}
input[type='radio'] + label:nth-of-type(2) {
  left: 25%;
}
input[type='radio'] + label:nth-of-type(3) {
  left: 50%;
}
input[type='radio'] + label:nth-of-type(4) {
  left: 75%;
  border-radius: 0 0 5.5vmin 0;
}
input[type='radio']:checked + label {
  color: var(--linkColor);
}
input:checked ~ #screenWrapper {
  transform: translateX(0);
}
input:nth-of-type(2):checked ~ #screenWrapper {
  transform: translateX(-25%);
}
input:nth-of-type(3):checked ~ #screenWrapper {
  transform: translateX(-50%);
}
input:nth-of-type(4):checked ~ #screenWrapper {
  transform: translateX(-75%);
}
.hFlex,
.vFlex {
  display: flex;
  justify-content: space-between;
}
.vFlex {
  flex-direction: column;
}
.spacer {
  flex-grow: 1;
}
.contact {
  height: 8vmin;
  border-top: 1px solid var(--lightColor);
  font-size: 2vmin;
  align-items: center;
  overflow: hidden;
  font-weight: 600;
  transition: height 200ms ease-in-out 0s;
}
.missed {
  color: orangered;
}
.centerMe {
  align-items: center;
}
.time,
.contactType {
  color: var(--dullColor);
  font-weight: 400;
}
.contact span {
  color: var(--linkColor);
  font-size: 3vmin;
  padding-left: 2vmin;
}
.contactType::after {
  content: 'mobile';
  font-weight: 400;
  font-size: 1.5vmin;
}
.screenTitle {
  font-size: 3.5vmin;
  font-weight: 600;
  padding-bottom: 1.5vmin;
}
.innerTitle {
  font-size: 2vmin;
  font-weight: 600;
}
.buttonLabel {
  color: var(--linkColor);
  text-align: right;
  font-weight: 600;
  font-size: 2vmin;
}
.sticky .buttonLabel {
  color: transparent;
}
.showLabels .buttonLabel {
  color: var(--linkColor);
}
.showLabels .buttonLabel::after {
  content: '';
}
.buttonLabel::after {
  content: 'Edit';
}
.editCheck:checked + label .buttonLabel::after {
  content: 'Done';
}
.buttonLabel span {
  font-size: 3vmin;
}
#missedCalls + label {
  position: fixed;
  display: flex;
  background-color: var(--missedColor);
  border-radius: 0.8vmin;
  padding: 0.2vmin;
  gap: 0.5vmin;
  width: fit-content;
  justify-items: stretch;
  top: 2.5vmin;
  z-index: 2;
  transform: translateX(50%);
}
.editCheck {
  display: none;
}
.editCheck + label {
  position: fixed;
  top: 3vmin;
  margin-left: 32vmin;
  z-index: 3;
}
.editCheck:checked ~ .newContact {
  transform: translateX(6vmin);
}
.newContact {
  position: relative;
  transition: transform 200ms ease-in-out 0s;
}
.deleteCheck:checked + label + .contact,
.deleteCheck:checked + label {
  height: 0;
  border-top: none;
}
.deleteCheck {
  display: none;
}
.deleteCheck + label {
  position: absolute;
  top: 2vmin;
  margin-left: -7vmin;
  height: 4.5vmin;
  font-size: 2vmin;
  overflow: hidden;
  transition: height 200ms ease-in 0s;
}
.deleteCheck + label span {
  color: orangered;
}
#missedCalls:checked ~ .newContact .contact,
#missedCalls:checked ~ .newContact .deleteCheck:checked ~ .missed {
  height: 0;
  border-top: none;
}

#missedCalls:checked ~ .newContact .deleteCheck ~ .missed {
  height: 8vmin;
  border-top: 1px solid var(--lightColor);
}
#missedCalls {
  display: none;
}
#missedCalls + label div {
  width: 7vmin;
  padding: 0.6vmin 1vmin;
  font-size: 1.6vmin;
  text-align: center;
  border-radius: 0.6vmin;
  font-weight: 600;
}
#missedCalls + label .indicator {
  position: absolute;
  background-color: var(--indiColor);
  z-index: -1;
  color: transparent;
  transition: transform 150ms ease-in-out 0s;
}
.indicator::after {
  content: 'Missed';
}
#missedCalls:checked + label .indicator {
  transform: translateX(9.5vmin);
}
.spacing {
  padding: 3vmin;
  padding-top: 0;
}
.sticky {
  position: sticky;
  top: 0;
  background-color: var(--bgColor);
  padding: 3vmin 0;
  z-index: 1;
}
.numWrapper {
  position: absolute;
  padding: 0 5vmin;
  width: calc(100% - 10vmin);
  height: 50vmin;
  bottom: 5vmin;
}
.numBtn {
  position: relative;
  padding: 1.5vmin 2.65vmin;
  font-size: 3vmin;
  text-align: center;
  background-color: var(--lightColor);
  color: transparent;
  border-radius: 50%;
  cursor: pointer;
}
.numBtn:hover {
  filter: brightness(80%);
}
.iconBtn {
  background-color: limegreen;
}
.iconBtn span {
  font-size: 3vmin;
  color: #ffffff;
  padding: 1.2vmin 0;
}
.letterNum {
  font-size: 1.5vmin;
}
.numBtn::before,
.numBtn::after {
  position: absolute;
  text-align: center;
  width: 40%;
  color: var(--txtColor);
}
.numBtn::before {
  content: attr(numValue);
}
.numBtn::after {
  content: attr(letterValue);
  font-size: 1.2vmin;
  font-weight: 600;
  letter-spacing: 0.4vmin;
  text-indent: 0.4vmin;
  width: fit-content;
  transform: translateX(-50%);
  bottom: 17%;
  left: 50%;
}
.noText::after {
  content: '';
}
.noText::before {
  margin-top: 11%;
}
.noText:nth-of-type(1)::before {
  margin-top: 0;
}
.hFlex .moreSpace::before {
  margin-top: 16%;
}
.screen:nth-of-type(3) .sticky {
  padding: 3vmin;
}
.screen:nth-of-type(3) .screenTitle {
  padding: 0 3vmin;
  padding-bottom: 1.5vmin;
}
.contactRow {
  padding: 1.5vmin 0;
  margin: 0 3vmin;
  font-size: 2vmin;
  font-weight: 600;
  border-bottom: 1px solid var(--lightColor);
}
.almostLast {
  border: none;
}
.letterStick {
  border: none;
  background-color: var(--lightColor);
  position: sticky;
  top: 9vmin;
  margin: 0;
  padding: 1vmin 3vmin;
}
